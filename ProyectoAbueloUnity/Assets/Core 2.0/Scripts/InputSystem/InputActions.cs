//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Core 2.0/Scripts/InputSystem/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""FreeMove"",
            ""id"": ""bd97bdf7-4843-45b2-bbef-4e2bf663bdb1"",
            ""actions"": [
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""55a57d0b-1a54-483c-88c1-d1b4e1de57fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4e4fe4fc-0e14-40a2-93a9-eeb1e46762a1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f921fe22-9bef-47b1-ab09-8c3f8c098ac5"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CameraMode"",
            ""id"": ""8e79a051-661c-4393-bff2-3eb431afa043"",
            ""actions"": [
                {
                    ""name"": ""TakePicture"",
                    ""type"": ""Button"",
                    ""id"": ""b1313e35-bab0-4f7d-a7d6-6850680dd30d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""PassThrough"",
                    ""id"": ""93bc3bb9-3816-4b23-9dbf-8ab07d1dc053"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeSetting"",
                    ""type"": ""Button"",
                    ""id"": ""dffc6e06-e0f3-42ec-aa77-9daae3c10554"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeSettingUp"",
                    ""type"": ""Button"",
                    ""id"": ""ac0fafb0-e07c-4577-9cb5-ad81ad6676d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeSettingDown"",
                    ""type"": ""Button"",
                    ""id"": ""a953992c-9ce7-462b-83f5-874977c44c3f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetCamera"",
                    ""type"": ""Button"",
                    ""id"": ""fda6aef8-b81a-4b89-a0c3-34b04dc83f09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d915eb9c-f827-4743-a98b-698fc463542f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""TakePicture"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46cf177d-8d81-43a8-adb4-8a0d36ec641b"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TakePicture"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed2feb22-204e-484c-b0cf-e22ccaeffca7"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2,ScaleVector2(y=10)"",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""7fd1eca5-710c-4e07-a2dc-eb2b85cd14fa"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c1c7c362-820b-441f-9a50-e1b2b8375bb6"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""49146066-ad6b-480f-8fcf-3c943c7e428f"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""29020360-1c35-45f6-88e6-df8ee80a5899"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ChangeSetting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3191697d-9377-4de9-99bc-c3174ffc7655"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ChangeSetting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8538d711-2d36-42e9-8e34-8c5c01f40d66"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ChangeSettingUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc028c11-35bc-4ac4-8caf-891dc3f687d9"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ChangeSettingUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecb1efac-d2ee-44cd-98e7-88673f451dd8"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ChangeSettingDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b140f0f-1856-42f2-a8d7-1a6d9b6a8d36"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ChangeSettingDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59d68e32-daeb-4e10-a4fc-21e5c98a63de"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ResetCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""179e1c88-4d0d-4311-97f9-9b876cae446a"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ResetCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Gameplay"",
            ""id"": ""4451f8e4-3bfa-43ac-a74d-a355b6631096"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""46169300-682e-4d18-afbb-f9aa0b107f77"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraRotation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3c2dcc46-4e7d-4c79-ae1b-718b9de8676d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleMenu"",
                    ""type"": ""Button"",
                    ""id"": ""167bb141-02a9-4888-ba1b-dd9e0024fee4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleMap"",
                    ""type"": ""Button"",
                    ""id"": ""cd0678d6-cc3a-4421-847a-7266991ad46d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleCamera"",
                    ""type"": ""Button"",
                    ""id"": ""561f8d9a-56b9-4ffc-886a-84c9e6d066e6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""dfdbca1b-002c-429a-bbe5-cc71dd7744fb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c827c18e-6262-4b88-a4e1-a3b96fee958e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""67b6e852-fc77-4727-95c4-027eab027fe5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""11283427-46a9-4f42-973d-ebf829f05c37"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8edacdce-6523-418f-87f7-c095cc084dd4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""74f1c817-3246-47a4-ac9e-91003834dcfc"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14acb101-558e-47fc-b286-40f1de54019e"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""CameraRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41c8891b-562d-4455-9668-c26c160f50ea"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CameraRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06f33c59-fdc3-425a-866c-0ff768e68795"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ToggleMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1058dece-ec44-4e17-ab8b-46c96c9fa96e"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ToggleMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5ddae71-4aed-41cf-b9e0-60a7305a3adf"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ToggleMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dba89bcd-9862-40f3-bd62-4e8d8ecc22c1"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ToggleMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c66785de-4e82-4b90-a6ab-7cef51fe4a92"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ToggleCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4407cb29-5cc8-4167-8c5f-70139b8afa85"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ToggleCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard & Mouse"",
            ""bindingGroup"": ""Keyboard & Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // FreeMove
        m_FreeMove = asset.FindActionMap("FreeMove", throwIfNotFound: true);
        m_FreeMove_Interact = m_FreeMove.FindAction("Interact", throwIfNotFound: true);
        // CameraMode
        m_CameraMode = asset.FindActionMap("CameraMode", throwIfNotFound: true);
        m_CameraMode_TakePicture = m_CameraMode.FindAction("TakePicture", throwIfNotFound: true);
        m_CameraMode_Zoom = m_CameraMode.FindAction("Zoom", throwIfNotFound: true);
        m_CameraMode_ChangeSetting = m_CameraMode.FindAction("ChangeSetting", throwIfNotFound: true);
        m_CameraMode_ChangeSettingUp = m_CameraMode.FindAction("ChangeSettingUp", throwIfNotFound: true);
        m_CameraMode_ChangeSettingDown = m_CameraMode.FindAction("ChangeSettingDown", throwIfNotFound: true);
        m_CameraMode_ResetCamera = m_CameraMode.FindAction("ResetCamera", throwIfNotFound: true);
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Movement = m_Gameplay.FindAction("Movement", throwIfNotFound: true);
        m_Gameplay_CameraRotation = m_Gameplay.FindAction("CameraRotation", throwIfNotFound: true);
        m_Gameplay_ToggleMenu = m_Gameplay.FindAction("ToggleMenu", throwIfNotFound: true);
        m_Gameplay_ToggleMap = m_Gameplay.FindAction("ToggleMap", throwIfNotFound: true);
        m_Gameplay_ToggleCamera = m_Gameplay.FindAction("ToggleCamera", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FreeMove
    private readonly InputActionMap m_FreeMove;
    private List<IFreeMoveActions> m_FreeMoveActionsCallbackInterfaces = new List<IFreeMoveActions>();
    private readonly InputAction m_FreeMove_Interact;
    public struct FreeMoveActions
    {
        private @InputActions m_Wrapper;
        public FreeMoveActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interact => m_Wrapper.m_FreeMove_Interact;
        public InputActionMap Get() { return m_Wrapper.m_FreeMove; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FreeMoveActions set) { return set.Get(); }
        public void AddCallbacks(IFreeMoveActions instance)
        {
            if (instance == null || m_Wrapper.m_FreeMoveActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_FreeMoveActionsCallbackInterfaces.Add(instance);
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
        }

        private void UnregisterCallbacks(IFreeMoveActions instance)
        {
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
        }

        public void RemoveCallbacks(IFreeMoveActions instance)
        {
            if (m_Wrapper.m_FreeMoveActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IFreeMoveActions instance)
        {
            foreach (var item in m_Wrapper.m_FreeMoveActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_FreeMoveActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public FreeMoveActions @FreeMove => new FreeMoveActions(this);

    // CameraMode
    private readonly InputActionMap m_CameraMode;
    private List<ICameraModeActions> m_CameraModeActionsCallbackInterfaces = new List<ICameraModeActions>();
    private readonly InputAction m_CameraMode_TakePicture;
    private readonly InputAction m_CameraMode_Zoom;
    private readonly InputAction m_CameraMode_ChangeSetting;
    private readonly InputAction m_CameraMode_ChangeSettingUp;
    private readonly InputAction m_CameraMode_ChangeSettingDown;
    private readonly InputAction m_CameraMode_ResetCamera;
    public struct CameraModeActions
    {
        private @InputActions m_Wrapper;
        public CameraModeActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @TakePicture => m_Wrapper.m_CameraMode_TakePicture;
        public InputAction @Zoom => m_Wrapper.m_CameraMode_Zoom;
        public InputAction @ChangeSetting => m_Wrapper.m_CameraMode_ChangeSetting;
        public InputAction @ChangeSettingUp => m_Wrapper.m_CameraMode_ChangeSettingUp;
        public InputAction @ChangeSettingDown => m_Wrapper.m_CameraMode_ChangeSettingDown;
        public InputAction @ResetCamera => m_Wrapper.m_CameraMode_ResetCamera;
        public InputActionMap Get() { return m_Wrapper.m_CameraMode; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraModeActions set) { return set.Get(); }
        public void AddCallbacks(ICameraModeActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraModeActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraModeActionsCallbackInterfaces.Add(instance);
            @TakePicture.started += instance.OnTakePicture;
            @TakePicture.performed += instance.OnTakePicture;
            @TakePicture.canceled += instance.OnTakePicture;
            @Zoom.started += instance.OnZoom;
            @Zoom.performed += instance.OnZoom;
            @Zoom.canceled += instance.OnZoom;
            @ChangeSetting.started += instance.OnChangeSetting;
            @ChangeSetting.performed += instance.OnChangeSetting;
            @ChangeSetting.canceled += instance.OnChangeSetting;
            @ChangeSettingUp.started += instance.OnChangeSettingUp;
            @ChangeSettingUp.performed += instance.OnChangeSettingUp;
            @ChangeSettingUp.canceled += instance.OnChangeSettingUp;
            @ChangeSettingDown.started += instance.OnChangeSettingDown;
            @ChangeSettingDown.performed += instance.OnChangeSettingDown;
            @ChangeSettingDown.canceled += instance.OnChangeSettingDown;
            @ResetCamera.started += instance.OnResetCamera;
            @ResetCamera.performed += instance.OnResetCamera;
            @ResetCamera.canceled += instance.OnResetCamera;
        }

        private void UnregisterCallbacks(ICameraModeActions instance)
        {
            @TakePicture.started -= instance.OnTakePicture;
            @TakePicture.performed -= instance.OnTakePicture;
            @TakePicture.canceled -= instance.OnTakePicture;
            @Zoom.started -= instance.OnZoom;
            @Zoom.performed -= instance.OnZoom;
            @Zoom.canceled -= instance.OnZoom;
            @ChangeSetting.started -= instance.OnChangeSetting;
            @ChangeSetting.performed -= instance.OnChangeSetting;
            @ChangeSetting.canceled -= instance.OnChangeSetting;
            @ChangeSettingUp.started -= instance.OnChangeSettingUp;
            @ChangeSettingUp.performed -= instance.OnChangeSettingUp;
            @ChangeSettingUp.canceled -= instance.OnChangeSettingUp;
            @ChangeSettingDown.started -= instance.OnChangeSettingDown;
            @ChangeSettingDown.performed -= instance.OnChangeSettingDown;
            @ChangeSettingDown.canceled -= instance.OnChangeSettingDown;
            @ResetCamera.started -= instance.OnResetCamera;
            @ResetCamera.performed -= instance.OnResetCamera;
            @ResetCamera.canceled -= instance.OnResetCamera;
        }

        public void RemoveCallbacks(ICameraModeActions instance)
        {
            if (m_Wrapper.m_CameraModeActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraModeActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraModeActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraModeActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraModeActions @CameraMode => new CameraModeActions(this);

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_Movement;
    private readonly InputAction m_Gameplay_CameraRotation;
    private readonly InputAction m_Gameplay_ToggleMenu;
    private readonly InputAction m_Gameplay_ToggleMap;
    private readonly InputAction m_Gameplay_ToggleCamera;
    public struct GameplayActions
    {
        private @InputActions m_Wrapper;
        public GameplayActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Gameplay_Movement;
        public InputAction @CameraRotation => m_Wrapper.m_Gameplay_CameraRotation;
        public InputAction @ToggleMenu => m_Wrapper.m_Gameplay_ToggleMenu;
        public InputAction @ToggleMap => m_Wrapper.m_Gameplay_ToggleMap;
        public InputAction @ToggleCamera => m_Wrapper.m_Gameplay_ToggleCamera;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @CameraRotation.started += instance.OnCameraRotation;
            @CameraRotation.performed += instance.OnCameraRotation;
            @CameraRotation.canceled += instance.OnCameraRotation;
            @ToggleMenu.started += instance.OnToggleMenu;
            @ToggleMenu.performed += instance.OnToggleMenu;
            @ToggleMenu.canceled += instance.OnToggleMenu;
            @ToggleMap.started += instance.OnToggleMap;
            @ToggleMap.performed += instance.OnToggleMap;
            @ToggleMap.canceled += instance.OnToggleMap;
            @ToggleCamera.started += instance.OnToggleCamera;
            @ToggleCamera.performed += instance.OnToggleCamera;
            @ToggleCamera.canceled += instance.OnToggleCamera;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @CameraRotation.started -= instance.OnCameraRotation;
            @CameraRotation.performed -= instance.OnCameraRotation;
            @CameraRotation.canceled -= instance.OnCameraRotation;
            @ToggleMenu.started -= instance.OnToggleMenu;
            @ToggleMenu.performed -= instance.OnToggleMenu;
            @ToggleMenu.canceled -= instance.OnToggleMenu;
            @ToggleMap.started -= instance.OnToggleMap;
            @ToggleMap.performed -= instance.OnToggleMap;
            @ToggleMap.canceled -= instance.OnToggleMap;
            @ToggleCamera.started -= instance.OnToggleCamera;
            @ToggleCamera.performed -= instance.OnToggleCamera;
            @ToggleCamera.canceled -= instance.OnToggleCamera;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard & Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IFreeMoveActions
    {
        void OnInteract(InputAction.CallbackContext context);
    }
    public interface ICameraModeActions
    {
        void OnTakePicture(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnChangeSetting(InputAction.CallbackContext context);
        void OnChangeSettingUp(InputAction.CallbackContext context);
        void OnChangeSettingDown(InputAction.CallbackContext context);
        void OnResetCamera(InputAction.CallbackContext context);
    }
    public interface IGameplayActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnCameraRotation(InputAction.CallbackContext context);
        void OnToggleMenu(InputAction.CallbackContext context);
        void OnToggleMap(InputAction.CallbackContext context);
        void OnToggleCamera(InputAction.CallbackContext context);
    }
}
